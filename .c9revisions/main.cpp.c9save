{"ts":1374772493122,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#include <iostream>\r\n\r\n\r\nint main() {\r\n\r\n    cout << \"Hello World!\\n\";\r\n    return 0; \r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":91}]],"length":91}
{"contributors":[],"silentsave":false,"ts":1374772648589,"patch":[[{"diffs":[[0,"() {\r\n\r\n"],[1,"    /* Set up the local variables */\r\n    \r\n    int numOne;\r\n    int numTwo;\r\n    int numThree;\r\n    int numFour;\r\n    int finalNum;\r\n    \r\n"],[0,"    cout"]],"start1":33,"start2":33,"length1":16,"length2":156},{"diffs":[[0,"<< \""],[-1,"Hello World!\\n\";"],[1,"Welcome to narc. Enter the four digits provided and the digit needed:\\n\";\r\n    \r\n    /* Get input */\r\n    \r\n    cin >> numOne;\r\n    cin >> numTwo;\r\n    cin >> numThree;\r\n    cin >> numFour;\r\n    cin >> finalNum;\r\n    "],[0,"\r\n  "]],"start1":190,"start2":190,"length1":24,"length2":225}]],"length":432,"saved":false}
{"ts":1374772689773,"patch":[[{"diffs":[[0,"  \r\n    "],[1,"std::"],[0,"cout << "]],"start1":177,"start2":177,"length1":16,"length2":21},{"diffs":[[0,"\r\n    \r\n    "],[1,"std::"],[0,"cin >> numOn"]],"start1":299,"start2":299,"length1":24,"length2":29},{"diffs":[[0,">> numOne;\r\n    "],[1,"std::"],[0,"cin >> numTwo;\r\n"]],"start1":320,"start2":320,"length1":32,"length2":37},{"diffs":[[0,"umTwo;\r\n    "],[1,"std::"],[0,"cin >> numTh"]],"start1":349,"start2":349,"length1":24,"length2":29},{"diffs":[[0,"Three;\r\n    "],[1,"std::"],[0,"cin >> numFo"]],"start1":376,"start2":376,"length1":24,"length2":29},{"diffs":[[0,"r;\r\n    "],[1,"std::"],[0,"cin >> f"]],"start1":406,"start2":406,"length1":16,"length2":21}]],"length":462,"saved":false}
{"ts":1374772734564,"patch":[[{"diffs":[[0,"tream>\r\n"],[1,"#include <stdlib.h>"],[0,"\r\n\r\nint "]],"start1":13,"start2":13,"length1":16,"length2":35}]],"length":481,"saved":false}
{"ts":1374773077125,"patch":[[{"diffs":[[0,"tream>\r\n"],[1,"#include <string>\r\n#include \"parser.h\"\r\n"],[0,"#include"]],"start1":13,"start2":13,"length1":16,"length2":56}]],"length":521,"saved":false}
{"ts":1374773128391,"patch":[[{"diffs":[[0,"Num;\r\n    \r\n"],[1,"    ExpressionParser<int> parser;\r\n    std::string expr(\"(0 + ~(0xFF & 1000)*3) /-2\");\r\n\r\n  try {\r\n    std::cout << expr << \" = \" << parser.eval(expr) << std::endl;\r\n  }\r\n  catch (parser_error& e) {\r\n    std::cerr << e.what() << std::endl;\r\n  }\r\n    \r\n"],[0,"    return 0"]],"start1":490,"start2":490,"length1":24,"length2":276}]],"length":773,"saved":false}
{"ts":1374773512107,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"    ExpressionParser<int> parser;\r\n    std::string expr(\"(0 + ~(0xFF & 1000)*3) /-2\");\r\n\r\n  try {\r\n    std::cout << expr << \" = \" << parser.eval(expr) << std::endl;\r\n  }\r\n  catch (parser_error& e) {\r\n    std::cerr << e.what() << std::endl;\r\n  }\r\n"],[0,"    "]],"start1":498,"start2":498,"length1":254,"length2":8}]],"length":527,"saved":false}
{"ts":1374773698044,"patch":[[{"diffs":[[0,"ser.h\"\r\n"],[1,"#include \"algo.h\"\r\n"],[0,"#include"]],"start1":53,"start2":53,"length1":16,"length2":35}]],"length":546,"saved":false}
