{"ts":1375219470117,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1375219488948,"patch":[[{"diffs":[[1," #include <iostream>\r\n    #include <string>\r\n    #include <math.h>\r\n    #include <stdio.h>\r\n    #include <stdlib.h>\r\n    using namespace std;\r\n\r\n    void displayPermutation(string permutation[], int length){\r\n        int i;\r\n        for (i=0;i<length;i++){\r\n            cout<<permutation[i];\r\n        }\r\n        cout << endl;\r\n    }\r\n\r\n    void getPermutations(string operatorBank[], int operatorCount, \r\n            string permutation[],int permutationLength, int curIndex){\r\n        int i;\r\n        //stop recursion condition\r\n        if(curIndex == permutationLength){\r\n            displayPermutation(permutation,permutationLength);\r\n        }\r\n        else{\r\n            for(i = 0; i < operatorCount; i++){\r\n                permutation[curIndex] = operatorBank[i];\r\n                getPermutations(operatorBank,operatorCount,permutation,\r\n                    permutationLength,curIndex+1);\r\n            }\r\n        }\r\n    }\r\n\r\n    int main ()\r\n   {\r\n       int operatorCount = 4;\r\n       int permutationLength = 3;\r\n       string operatorBank[] = {\"+\",\"-\",\"*\",\"/\"};\r\n       string permutation[] = {\"\",\"\",\"\",\"\"}; //empty string\r\n       int curIndex = 0;\r\n       getPermutations(operatorBank,operatorCount,permutation,\r\n                                   permutationLength,curIndex);\r\n       return 0;\r\n   }"]],"start1":0,"start2":0,"length1":0,"length2":1308}]],"length":1308,"saved":false}
{"ts":1375219498187,"patch":[[{"diffs":[[-1," "],[0,"#include <iostre"]],"start1":0,"start2":0,"length1":17,"length2":16},{"diffs":[[0,"tream>\r\n"],[-1,"    "],[0,"#include"]],"start1":13,"start2":13,"length1":20,"length2":16},{"diffs":[[0,"tring>\r\n"],[-1,"    "],[0,"#include"]],"start1":32,"start2":32,"length1":20,"length2":16},{"diffs":[[0,"e <math.h>\r\n"],[-1,"    "],[0,"#include <st"]],"start1":47,"start2":47,"length1":28,"length2":24},{"diffs":[[0,"dio.h>\r\n"],[-1,"    "],[0,"#include"]],"start1":71,"start2":71,"length1":20,"length2":16},{"diffs":[[0,"lib.h>\r\n"],[-1,"    "],[0,"using na"]],"start1":92,"start2":92,"length1":20,"length2":16},{"diffs":[[0,"ace std;\r\n\r\n"],[-1,"    "],[0,"void display"]],"start1":112,"start2":112,"length1":28,"length2":24},{"diffs":[[0,"t length){\r\n"],[-1,"    "],[0,"    int i;\r\n"]],"start1":172,"start2":172,"length1":28,"length2":24},{"diffs":[[0,"    int i;\r\n"],[-1,"    "],[0,"    for (i=0"]],"start1":184,"start2":184,"length1":28,"length2":24},{"diffs":[[0,"){\r\n        "],[-1,"    "],[0,"cout<<permut"]],"start1":221,"start2":221,"length1":28,"length2":24},{"diffs":[[0,"on[i];\r\n    "],[-1," "],[-1,"   }\r\n    "],[1,"}\r\n"],[0,"    cout << "]],"start1":248,"start2":248,"length1":35,"length2":27},{"diffs":[[0," endl;\r\n"],[-1,"    "],[0,"}\r\n\r\n"],[-1,"    "],[0,"void get"]],"start1":274,"start2":274,"length1":29,"length2":21},{"diffs":[[0,"ount, \r\n"],[-1,"    "],[0,"        "]],"start1":344,"start2":344,"length1":20,"length2":16},{"diffs":[[0,"curIndex){\r\n"],[-1,"    "],[0,"    int i;\r\n"]],"start1":408,"start2":408,"length1":28,"length2":24},{"diffs":[[0,"int i;\r\n"],[-1,"    "],[0,"    //st"]],"start1":424,"start2":424,"length1":20,"length2":16},{"diffs":[[0,"on\r\n    "],[-1,"  "],[-1,"  "],[0,"if(curIn"]],"start1":460,"start2":460,"length1":20,"length2":16},{"diffs":[[0,"onLength){\r\n"],[-1,"    "],[0,"        disp"]],"start1":492,"start2":492,"length1":28,"length2":24},{"diffs":[[0,"ngth);\r\n    "],[-1,"   "],[-1," "],[0,"}\r\n"],[-1,"    "],[0,"    else{\r\n "]],"start1":556,"start2":556,"length1":35,"length2":27},{"diffs":[[0," else{\r\n"],[-1,"    "],[0,"        "]],"start1":574,"start2":574,"length1":20,"length2":16},{"diffs":[[0,"){\r\n            "],[-1," "],[-1,"   "],[0,"permutation[curI"]],"start1":623,"start2":623,"length1":36,"length2":32},{"diffs":[[0,"nk[i];\r\n"],[-1,"    "],[0,"        "]],"start1":673,"start2":673,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"  "],[-1,"  "],[0,"permutationLengt"]],"start1":750,"start2":750,"length1":36,"length2":32},{"diffs":[[0,"    "],[-1,"    }\r\n    "],[1,"}\r\n"],[0,"    }\r\n"],[-1,"    "],[0,"}\r\n\r\n"],[-1,"    "],[0,"int "]],"start1":802,"start2":802,"length1":39,"length2":23},{"diffs":[[0,"()\r\n"],[-1,"   {\r\n    "],[1,"{\r\n"],[0,"   i"]],"start1":830,"start2":830,"length1":18,"length2":11},{"diffs":[[0,"t = 4;\r\n"],[-1,"    "],[0,"   int p"]],"start1":856,"start2":856,"length1":20,"length2":16},{"diffs":[[0,"h = 3;\r\n"],[-1,"    "],[0,"   strin"]],"start1":887,"start2":887,"length1":20,"length2":16},{"diffs":[[0,",\"/\"};\r\n"],[-1,"    "],[0,"   strin"]],"start1":934,"start2":934,"length1":20,"length2":16},{"diffs":[[0,"string\r\n"],[-1,"    "],[0,"   int c"]],"start1":991,"start2":991,"length1":20,"length2":16},{"diffs":[[0,"x = 0;\r\n"],[-1,"    "],[0,"   getPe"]],"start1":1013,"start2":1013,"length1":20,"length2":16},{"diffs":[[0,"                "],[-1,"    "],[0,"permutationLengt"]],"start1":1096,"start2":1096,"length1":36,"length2":32},{"diffs":[[0,"ndex);\r\n"],[-1,"    "],[0,"   retur"]],"start1":1134,"start2":1134,"length1":20,"length2":16},{"diffs":[[0,"urn 0;\r\n"],[-1,"   "],[0,"}"]],"start1":1148,"start2":1148,"length1":12,"length2":9}]],"length":1157,"saved":false}
{"ts":1375219500839,"patch":[[{"diffs":[[0,"lib.h>\r\n"],[1,"\r\n"],[0,"using na"]],"start1":92,"start2":92,"length1":16,"length2":18}]],"length":1159,"saved":false}
{"ts":1375219558031,"patch":[[{"diffs":[[0,"ount, \r\n"],[-1,"    "],[0,"    stri"]],"start1":346,"start2":346,"length1":20,"length2":16}]],"length":1155,"saved":false}
